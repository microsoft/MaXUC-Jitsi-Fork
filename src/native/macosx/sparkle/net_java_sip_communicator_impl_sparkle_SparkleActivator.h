/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_java_sip_communicator_impl_sparkle_SparkleActivator */
#include <Sparkle.h>

#ifndef _Included_net_java_sip_communicator_impl_sparkle_SparkleActivator
#define _Included_net_java_sip_communicator_impl_sparkle_SparkleActivator
#ifdef __cplusplus
extern "C" {
#endif

@interface SUUpdaterDelegateImpl : NSObject <SUUpdaterDelegate>

@property (atomic, retain) NSString *updateURL;

- (NSString *)feedURLStringForUpdater:(SUUpdater *)updater;
@end


/*
 * Class:     net_java_sip_communicator_impl_sparkle_SparkleActivator
 * Method:    initSparkle
 * Signature: (Ljava/lang/String;ZILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_sparkle_SparkleActivator_initSparkle
  (JNIEnv *, jclass, jstring, jboolean, jint, jstring, jstring, jstring);

/*
 * Class:     net_java_sip_communicator_impl_sparkle_SparkleActivator
 * Method:    setDownloadLink
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_java_sip_communicator_impl_sparkle_SparkleActivator_setDownloadLink
  (JNIEnv *, jclass, jstring);
  
/*
 * Class:     net_java_sip_communicator_impl_sparkle_SparkleActivator
 * Method:    setNewUpdateCheckInterval
 * Signature: (I)V
 */
JNIEXPORT void JNICALL
Java_net_java_sip_communicator_impl_sparkle_SparkleActivator_setNewUpdateCheckInterval
  (JNIEnv *, jclass, jint);
  
/*
 * Class:     net_java_sip_communicator_impl_sparkle_SparkleActivator
 * Method:    cancelScheduledUpdateChecks
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_net_java_sip_communicator_impl_sparkle_SparkleActivator_cancelScheduledUpdateChecks
  (JNIEnv *, jclass);

/*
 * Class:     net_java_sip_communicator_impl_sparkle_SparkleActivator
 * Method:    checkForUpdates
 * Signature: ()V
 */
JNIEXPORT void JNICALL
Java_net_java_sip_communicator_impl_sparkle_SparkleActivator_checkForUpdates
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
